openapi: 3.0.0
paths:
  /academic-years:
    post:
      operationId: create
      summary: Create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAcademicYearDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/AcademicYearDto'
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '400':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
        '409':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - academic-years
      security:
        - accessToken: []
    get:
      operationId: findInRange
      summary: Find In Range
      parameters:
        - name: start
          required: false
          in: query
          schema:
            type: number
        - name: end
          required: false
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/AcademicYearDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - academic-years
      security:
        - accessToken: []
  /academic-years/current:
    get:
      operationId: getCurrent
      summary: Get Current
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/AcademicYearDto'
                        nullable: true
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - academic-years
      security:
        - accessToken: []
  /academic-years/{id}:
    get:
      operationId: findOne
      summary: Find One
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/AcademicYearDto'
                        nullable: true
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - academic-years
      security:
        - accessToken: []
    delete:
      operationId: remove
      summary: Remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/AcademicYearDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '400':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - academic-years
      security:
        - accessToken: []
  /academic-years/current/{id}:
    put:
      operationId: updateCurrent
      summary: Update Current
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: boolean
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - academic-years
      security:
        - accessToken: []
  /auth/login:
    post:
      operationId: login
      summary: Login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginModel'
      responses:
        '200':
          description: Login JWT token
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/AccessToken'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '401':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - auth
  /users:
    post:
      operationId: create
      summary: Create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
      tags:
        - users
      security:
        - accessToken: []
  /users/me:
    get:
      operationId: getProfile
      summary: Get Profile
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/JwtUserDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - users
      security:
        - accessToken: []
  /course-classes:
    post:
      operationId: create
      summary: Create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourseClassDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/CourseClassListItemDto'
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '409':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - course-classes
      security:
        - accessToken: []
    get:
      operationId: findByCondition
      summary: Find By Condition
      parameters:
        - name: code
          required: false
          in: query
          schema:
            type: string
        - name: name
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/CourseClassListItemDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - course-classes
      security:
        - accessToken: []
  /course-classes/{id}:
    get:
      operationId: findOne
      summary: Find One
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/CourseClassDto'
                        nullable: true
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - course-classes
      security:
        - accessToken: []
  /course-classes/{id}/sessions:
    get:
      operationId: getSessions
      summary: Get Sessions
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - course-classes
      security:
        - accessToken: []
  /course-classes/{id}/students:
    put:
      operationId: updateStudentsList
      summary: Update Students List
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCourseClassStudentsListDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/CourseClassDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - course-classes
      security:
        - accessToken: []
  /courses:
    post:
      operationId: create
      summary: Create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourseDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/CourseDto'
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
        '409':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - courses
      security:
        - accessToken: []
    get:
      operationId: findByCondition
      summary: Find By Condition
      parameters:
        - name: code
          required: false
          in: query
          schema:
            type: string
        - name: name
          required: false
          in: query
          schema:
            type: string
        - name: programIds
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/CourseListItemDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - courses
      security:
        - accessToken: []
  /courses/{id}:
    get:
      operationId: findOne
      summary: Find One
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/CourseDto'
                        nullable: true
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - courses
      security:
        - accessToken: []
    patch:
      operationId: update
      summary: Update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCourseDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/CourseDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
        '409':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - courses
      security:
        - accessToken: []
    delete:
      operationId: remove
      summary: Remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/CourseDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - courses
      security:
        - accessToken: []
  /management-classes:
    post:
      operationId: create
      summary: Create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateManagementClassDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ManagementClassListItemDto'
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
        '409':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - management-classes
      security:
        - accessToken: []
    get:
      operationId: findByCondition
      summary: Find By Condition
      parameters:
        - name: code
          required: false
          in: query
          schema:
            type: string
        - name: name
          required: false
          in: query
          schema:
            type: string
        - name: academicYearId
          required: false
          in: query
          schema:
            type: string
        - name: programId
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ManagementClassListItemDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - management-classes
      security:
        - accessToken: []
  /management-classes/{id}:
    get:
      operationId: findOne
      summary: Find One
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ManagementClassDto'
                        nullable: true
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - management-classes
      security:
        - accessToken: []
    patch:
      operationId: update
      summary: Update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateManagementClassDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ManagementClassListItemDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
        '409':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - management-classes
      security:
        - accessToken: []
    delete:
      operationId: remove
      summary: Remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ManagementClassDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - management-classes
      security:
        - accessToken: []
  /programs:
    post:
      operationId: create
      summary: Create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProgramDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ProgramListItemDto'
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '409':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - programs
      security:
        - accessToken: []
    get:
      operationId: findByCondition
      summary: Find By Condition
      parameters:
        - name: code
          required: false
          in: query
          schema:
            type: string
        - name: name
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProgramListItemDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - programs
      security:
        - accessToken: []
  /programs/{id}:
    get:
      operationId: findOne
      summary: Find One
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ProgramDto'
                        nullable: true
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - programs
      security:
        - accessToken: []
    patch:
      operationId: update
      summary: Update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProgramDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ProgramListItemDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
        '409':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - programs
      security:
        - accessToken: []
    delete:
      operationId: remove
      summary: Remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ProgramListItemDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - programs
      security:
        - accessToken: []
  /programs/{id}/courses:
    patch:
      operationId: addCourses
      summary: Add Courses
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCoursesDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ProgramDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - programs
      security:
        - accessToken: []
info:
  title: ''
  description: ''
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    accessToken:
      scheme: Bearer
      bearerFormat: JWT
      name: Authorization
      in: Header
      type: http
  schemas:
    Result:
      type: object
      properties:
        data:
          type: object
        success:
          type: boolean
        message:
          type: object
      required:
        - data
        - success
        - message
    AcademicYearDto:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        startYear:
          type: number
        endYear:
          type: number
        isCurrent:
          type: boolean
      required:
        - id
        - code
        - name
        - startYear
        - endYear
        - isCurrent
    CreateAcademicYearDto:
      type: object
      properties:
        startYear:
          type: number
          minimum: 2010
          maximum: 2050
      required:
        - startYear
    AccessToken:
      type: object
      properties:
        accessToken:
          type: string
      required:
        - accessToken
    LoginModel:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    CreateUserProfileTeacherDto:
      type: object
      properties:
        teacherId:
          type: string
      required:
        - teacherId
    CreateUserProfileStudentDto:
      type: object
      properties:
        studentId:
          type: string
        managementClassId:
          type: string
      required:
        - studentId
        - managementClassId
    CreateUserProfileDto:
      type: object
      properties:
        firstName:
          type: string
        middleName:
          type: string
          nullable: true
        lastName:
          type: string
        phoneNumber:
          type: string
          nullable: true
        isMale:
          type: boolean
        address:
          type: string
          nullable: true
        teacher:
          $ref: '#/components/schemas/CreateUserProfileTeacherDto'
        student:
          $ref: '#/components/schemas/CreateUserProfileStudentDto'
      required:
        - firstName
        - lastName
        - isMale
    CreateUserDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        role:
          type: object
        profile:
          $ref: '#/components/schemas/CreateUserProfileDto'
      required:
        - email
        - password
        - role
    Role:
      type: string
      enum:
        - SystemAdmin
        - Admin
        - Teacher
        - Student
    JwtUserDto:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/Role'
        sub:
          type: string
        email:
          type: string
      required:
        - role
        - sub
        - email
    CourseClassSlotDto:
      type: object
      properties:
        startAt:
          type: string
        endAt:
          type: string
      required:
        - startAt
        - endAt
    CourseClassListItemDto:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        course:
          type: object
          properties:
            id:
              required: true
              type: string
            code:
              required: true
              type: string
            name:
              required: true
              type: string
        startAt:
          type: string
        endAt:
          type: string
        sessionCount:
          type: number
        isoSlots:
          type: array
          items:
            $ref: '#/components/schemas/CourseClassSlotDto'
      required:
        - id
        - code
        - name
        - course
        - startAt
        - sessionCount
        - isoSlots
    CreateCourseClassSlotDto:
      type: object
      properties:
        startAt:
          type: string
        endAt:
          type: string
      required:
        - startAt
        - endAt
    CreateCourseClassDto:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        startAt:
          type: string
        endAt:
          type: string
        sessionCount:
          type: number
          minimum: 1
          maximum: 50
        isoSlots:
          type: array
          items:
            $ref: '#/components/schemas/CreateCourseClassSlotDto'
        courseId:
          type: string
      required:
        - code
        - name
        - startAt
        - sessionCount
        - isoSlots
        - courseId
    StudentProfileDto:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      required:
        - id
        - firstName
        - lastName
    StudentDto:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/StudentProfileDto'
      required:
        - profile
    CourseClassDto:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        course:
          type: object
          properties:
            id:
              required: true
              type: string
            code:
              required: true
              type: string
            name:
              required: true
              type: string
        startAt:
          type: string
        endAt:
          type: string
        sessionCount:
          type: number
        isoSlots:
          type: array
          items:
            $ref: '#/components/schemas/CourseClassSlotDto'
        students:
          type: array
          items:
            $ref: '#/components/schemas/StudentDto'
      required:
        - id
        - code
        - name
        - course
        - startAt
        - sessionCount
        - isoSlots
        - students
    UpdateCourseClassStudentsListDto:
      type: object
      properties:
        studentIds:
          type: array
          items:
            type: string
      required:
        - studentIds
    Program:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
      required:
        - id
        - code
        - name
    CourseDto:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        createdAt:
          type: string
        programs:
          type: array
          items:
            $ref: '#/components/schemas/Program'
      required:
        - id
        - code
        - name
        - createdAt
        - programs
    CreateCourseDto:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        programIds:
          type: array
          items:
            type: string
      required:
        - code
        - name
        - programIds
    CourseListItemDto:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        createdAt:
          type: string
      required:
        - id
        - code
        - name
        - createdAt
    UpdateCourseDto:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        programIds:
          type: array
          items:
            type: string
    ManagementClassListItemDto:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        academicYear:
          $ref: '#/components/schemas/AcademicYearDto'
      required:
        - id
        - code
        - name
        - academicYear
    CreateManagementClassDto:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        academicYearId:
          type: string
        programId:
          type: string
      required:
        - code
        - name
        - academicYearId
        - programId
    ProgramDto:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        createdAt:
          type: string
        courses:
          type: array
          items:
            $ref: '#/components/schemas/Course'
        managementClass:
          type: array
          items:
            $ref: '#/components/schemas/ManagementClass'
      required:
        - id
        - code
        - name
        - createdAt
        - courses
        - managementClass
    ManagementClassDto:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        academicYear:
          $ref: '#/components/schemas/AcademicYearDto'
        program:
          $ref: '#/components/schemas/ProgramDto'
        students:
          type: array
          items:
            $ref: '#/components/schemas/StudentDto'
      required:
        - id
        - code
        - name
        - academicYear
        - program
        - students
    UpdateManagementClassDto:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        academicYearId:
          type: string
        programId:
          type: string
    ProgramListItemDto:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        createdAt:
          type: string
      required:
        - id
        - code
        - name
        - createdAt
    CreateProgramDto:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
      required:
        - code
        - name
    Course:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
      required:
        - id
        - code
        - name
    ManagementClass:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
      required:
        - id
        - code
        - name
    UpdateProgramDto:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
    AddCoursesDto:
      type: object
      properties:
        courses:
          type: array
          items:
            type: string
      required:
        - courses